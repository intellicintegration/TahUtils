// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sparkplug_b/sparkplug_b_c_sharp.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.Eclipse.Tahu.Protobuf {

  /// <summary>Holder for reflection information generated from sparkplug_b/sparkplug_b_c_sharp.proto</summary>
  public static partial class SparkplugBCSharpReflection {

    #region Descriptor
    /// <summary>File descriptor for sparkplug_b/sparkplug_b_c_sharp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SparkplugBCSharpReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVzcGFya3BsdWdfYi9zcGFya3BsdWdfYl9jX3NoYXJwLnByb3RvEhlvcmcu",
            "ZWNsaXBzZS50YWh1LnByb3RvYnVmGhlnb29nbGUvcHJvdG9idWYvYW55LnBy",
            "b3RvIrEYCgdQYXlsb2FkEhEKCXRpbWVzdGFtcBgBIAEoBBI6CgdtZXRyaWNz",
            "GAIgAygLMikub3JnLmVjbGlwc2UudGFodS5wcm90b2J1Zi5QYXlsb2FkLk1l",
            "dHJpYxILCgNzZXEYAyABKAQSDAoEdXVpZBgEIAEoCRIMCgRib2R5GAUgASgM",
            "EiUKB2RldGFpbHMYBiADKAsyFC5nb29nbGUucHJvdG9idWYuQW55GuMECghU",
            "ZW1wbGF0ZRIPCgd2ZXJzaW9uGAEgASgJEjoKB21ldHJpY3MYAiADKAsyKS5v",
            "cmcuZWNsaXBzZS50YWh1LnByb3RvYnVmLlBheWxvYWQuTWV0cmljEkkKCnBh",
            "cmFtZXRlcnMYAyADKAsyNS5vcmcuZWNsaXBzZS50YWh1LnByb3RvYnVmLlBh",
            "eWxvYWQuVGVtcGxhdGUuUGFyYW1ldGVyEhQKDHRlbXBsYXRlX3JlZhgEIAEo",
            "CRIVCg1pc19kZWZpbml0aW9uGAUgASgIEiUKB2RldGFpbHMYBiADKAsyFC5n",
            "b29nbGUucHJvdG9idWYuQW55GuoCCglQYXJhbWV0ZXISDAoEbmFtZRgBIAEo",
            "CRIMCgR0eXBlGAIgASgNEhMKCWludF92YWx1ZRgDIAEoDUgAEhQKCmxvbmdf",
            "dmFsdWUYBCABKARIABIVCgtmbG9hdF92YWx1ZRgFIAEoAkgAEhYKDGRvdWJs",
            "ZV92YWx1ZRgGIAEoAUgAEhcKDWJvb2xlYW5fdmFsdWUYByABKAhIABIWCgxz",
            "dHJpbmdfdmFsdWUYCCABKAlIABJoCg9leHRlbnNpb25fdmFsdWUYCSABKAsy",
            "TS5vcmcuZWNsaXBzZS50YWh1LnByb3RvYnVmLlBheWxvYWQuVGVtcGxhdGUu",
            "UGFyYW1ldGVyLlBhcmFtZXRlclZhbHVlRXh0ZW5zaW9uSAAaQwoXUGFyYW1l",
            "dGVyVmFsdWVFeHRlbnNpb24SKAoKZXh0ZW5zaW9ucxgBIAMoCzIULmdvb2ds",
            "ZS5wcm90b2J1Zi5BbnlCBwoFdmFsdWUa7gQKB0RhdGFTZXQSFgoObnVtX29m",
            "X2NvbHVtbnMYASABKAQSDwoHY29sdW1ucxgCIAMoCRINCgV0eXBlcxgDIAMo",
            "DRI8CgRyb3dzGAQgAygLMi4ub3JnLmVjbGlwc2UudGFodS5wcm90b2J1Zi5Q",
            "YXlsb2FkLkRhdGFTZXQuUm93EiUKB2RldGFpbHMYBSADKAsyFC5nb29nbGUu",
            "cHJvdG9idWYuQW55GswCCgxEYXRhU2V0VmFsdWUSEwoJaW50X3ZhbHVlGAEg",
            "ASgNSAASFAoKbG9uZ192YWx1ZRgCIAEoBEgAEhUKC2Zsb2F0X3ZhbHVlGAMg",
            "ASgCSAASFgoMZG91YmxlX3ZhbHVlGAQgASgBSAASFwoNYm9vbGVhbl92YWx1",
            "ZRgFIAEoCEgAEhYKDHN0cmluZ192YWx1ZRgGIAEoCUgAEmgKD2V4dGVuc2lv",
            "bl92YWx1ZRgHIAEoCzJNLm9yZy5lY2xpcHNlLnRhaHUucHJvdG9idWYuUGF5",
            "bG9hZC5EYXRhU2V0LkRhdGFTZXRWYWx1ZS5EYXRhU2V0VmFsdWVFeHRlbnNp",
            "b25IABo+ChVEYXRhU2V0VmFsdWVFeHRlbnNpb24SJQoHZGV0YWlscxgBIAMo",
            "CzIULmdvb2dsZS5wcm90b2J1Zi5BbnlCBwoFdmFsdWUadwoDUm93EkkKCGVs",
            "ZW1lbnRzGAEgAygLMjcub3JnLmVjbGlwc2UudGFodS5wcm90b2J1Zi5QYXls",
            "b2FkLkRhdGFTZXQuRGF0YVNldFZhbHVlEiUKB2RldGFpbHMYAiADKAsyFC5n",
            "b29nbGUucHJvdG9idWYuQW55GoYECg1Qcm9wZXJ0eVZhbHVlEgwKBHR5cGUY",
            "ASABKA0SDwoHaXNfbnVsbBgCIAEoCBITCglpbnRfdmFsdWUYAyABKA1IABIU",
            "Cgpsb25nX3ZhbHVlGAQgASgESAASFQoLZmxvYXRfdmFsdWUYBSABKAJIABIW",
            "Cgxkb3VibGVfdmFsdWUYBiABKAFIABIXCg1ib29sZWFuX3ZhbHVlGAcgASgI",
            "SAASFgoMc3RyaW5nX3ZhbHVlGAggASgJSAASSwoRcHJvcGVydHlzZXRfdmFs",
            "dWUYCSABKAsyLi5vcmcuZWNsaXBzZS50YWh1LnByb3RvYnVmLlBheWxvYWQu",
            "UHJvcGVydHlTZXRIABJQChJwcm9wZXJ0eXNldHNfdmFsdWUYCiABKAsyMi5v",
            "cmcuZWNsaXBzZS50YWh1LnByb3RvYnVmLlBheWxvYWQuUHJvcGVydHlTZXRM",
            "aXN0SAASYgoPZXh0ZW5zaW9uX3ZhbHVlGAsgASgLMkcub3JnLmVjbGlwc2Uu",
            "dGFodS5wcm90b2J1Zi5QYXlsb2FkLlByb3BlcnR5VmFsdWUuUHJvcGVydHlW",
            "YWx1ZUV4dGVuc2lvbkgAGj8KFlByb3BlcnR5VmFsdWVFeHRlbnNpb24SJQoH",
            "ZGV0YWlscxgBIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlCBwoFdmFsdWUa",
            "hAEKC1Byb3BlcnR5U2V0EgwKBGtleXMYASADKAkSQAoGdmFsdWVzGAIgAygL",
            "MjAub3JnLmVjbGlwc2UudGFodS5wcm90b2J1Zi5QYXlsb2FkLlByb3BlcnR5",
            "VmFsdWUSJQoHZGV0YWlscxgDIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5Bbnka",
            "fQoPUHJvcGVydHlTZXRMaXN0EkMKC3Byb3BlcnR5c2V0GAEgAygLMi4ub3Jn",
            "LmVjbGlwc2UudGFodS5wcm90b2J1Zi5QYXlsb2FkLlByb3BlcnR5U2V0EiUK",
            "B2RldGFpbHMYAiADKAsyFC5nb29nbGUucHJvdG9idWYuQW55GsEBCghNZXRh",
            "RGF0YRIVCg1pc19tdWx0aV9wYXJ0GAEgASgIEhQKDGNvbnRlbnRfdHlwZRgC",
            "IAEoCRIMCgRzaXplGAMgASgEEgsKA3NlcRgEIAEoBBIRCglmaWxlX25hbWUY",
            "BSABKAkSEQoJZmlsZV90eXBlGAYgASgJEgsKA21kNRgHIAEoCRITCgtkZXNj",
            "cmlwdGlvbhgIIAEoCRIlCgdkZXRhaWxzGAkgAygLMhQuZ29vZ2xlLnByb3Rv",
            "YnVmLkFueRrcBQoGTWV0cmljEgwKBG5hbWUYASABKAkSDQoFYWxpYXMYAiAB",
            "KAQSEQoJdGltZXN0YW1wGAMgASgEEhAKCGRhdGF0eXBlGAQgASgNEhUKDWlz",
            "X2hpc3RvcmljYWwYBSABKAgSFAoMaXNfdHJhbnNpZW50GAYgASgIEg8KB2lz",
            "X251bGwYByABKAgSPQoIbWV0YWRhdGEYCCABKAsyKy5vcmcuZWNsaXBzZS50",
            "YWh1LnByb3RvYnVmLlBheWxvYWQuTWV0YURhdGESQgoKcHJvcGVydGllcxgJ",
            "IAEoCzIuLm9yZy5lY2xpcHNlLnRhaHUucHJvdG9idWYuUGF5bG9hZC5Qcm9w",
            "ZXJ0eVNldBITCglpbnRfdmFsdWUYCiABKA1IABIUCgpsb25nX3ZhbHVlGAsg",
            "ASgESAASFQoLZmxvYXRfdmFsdWUYDCABKAJIABIWCgxkb3VibGVfdmFsdWUY",
            "DSABKAFIABIXCg1ib29sZWFuX3ZhbHVlGA4gASgISAASFgoMc3RyaW5nX3Zh",
            "bHVlGA8gASgJSAASFQoLYnl0ZXNfdmFsdWUYECABKAxIABJDCg1kYXRhc2V0",
            "X3ZhbHVlGBEgASgLMioub3JnLmVjbGlwc2UudGFodS5wcm90b2J1Zi5QYXls",
            "b2FkLkRhdGFTZXRIABJFCg50ZW1wbGF0ZV92YWx1ZRgSIAEoCzIrLm9yZy5l",
            "Y2xpcHNlLnRhaHUucHJvdG9idWYuUGF5bG9hZC5UZW1wbGF0ZUgAElkKD2V4",
            "dGVuc2lvbl92YWx1ZRgTIAEoCzI+Lm9yZy5lY2xpcHNlLnRhaHUucHJvdG9i",
            "dWYuUGF5bG9hZC5NZXRyaWMuTWV0cmljVmFsdWVFeHRlbnNpb25IABo9ChRN",
            "ZXRyaWNWYWx1ZUV4dGVuc2lvbhIlCgdkZXRhaWxzGAEgAygLMhQuZ29vZ2xl",
            "LnByb3RvYnVmLkFueUIHCgV2YWx1ZUIsChlvcmcuZWNsaXBzZS50YWh1LnBy",
            "b3RvYnVmQg9TcGFya3BsdWdCUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload), global::Org.Eclipse.Tahu.Protobuf.Payload.Parser, new[]{ "Timestamp", "Metrics", "Seq", "Uuid", "Body", "Details" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Parser, new[]{ "Version", "Metrics", "Parameters", "TemplateRef", "IsDefinition", "Details" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Parser, new[]{ "Name", "Type", "IntValue", "LongValue", "FloatValue", "DoubleValue", "BooleanValue", "StringValue", "ExtensionValue" }, new[]{ "Value" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Types.ParameterValueExtension), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Types.ParameterValueExtension.Parser, new[]{ "Extensions" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Parser, new[]{ "NumOfColumns", "Columns", "Types_", "Rows", "Details" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Parser, new[]{ "IntValue", "LongValue", "FloatValue", "DoubleValue", "BooleanValue", "StringValue", "ExtensionValue" }, new[]{ "Value" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Types.DataSetValueExtension), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Types.DataSetValueExtension.Parser, new[]{ "Details" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.Row), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.Row.Parser, new[]{ "Elements", "Details" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Parser, new[]{ "Type", "IsNull", "IntValue", "LongValue", "FloatValue", "DoubleValue", "BooleanValue", "StringValue", "PropertysetValue", "PropertysetsValue", "ExtensionValue" }, new[]{ "Value" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Types.PropertyValueExtension), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Types.PropertyValueExtension.Parser, new[]{ "Details" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet.Parser, new[]{ "Keys", "Values", "Details" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySetList), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySetList.Parser, new[]{ "Propertyset", "Details" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.MetaData), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.MetaData.Parser, new[]{ "IsMultiPart", "ContentType", "Size", "Seq", "FileName", "FileType", "Md5", "Description", "Details" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Parser, new[]{ "Name", "Alias", "Timestamp", "Datatype", "IsHistorical", "IsTransient", "IsNull", "Metadata", "Properties", "IntValue", "LongValue", "FloatValue", "DoubleValue", "BooleanValue", "StringValue", "BytesValue", "DatasetValue", "TemplateValue", "ExtensionValue" }, new[]{ "Value" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Types.MetricValueExtension), global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Types.MetricValueExtension.Parser, new[]{ "Details" }, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///// Indexes of Data Types
  ///// Unknown placeholder for future expansion.
  ///Unknown         = 0;
  ///// Basic Types
  ///Int8            = 1;
  ///Int16           = 2;
  ///Int32           = 3;
  ///Int64           = 4;
  ///UInt8           = 5;
  ///UInt16          = 6;
  ///UInt32          = 7;
  ///UInt64          = 8;
  ///Float           = 9;
  ///Double          = 10;
  ///Boolean         = 11;
  ///String          = 12;
  ///DateTime        = 13;
  ///Text            = 14;
  ///// Additional Metric Types
  ///UUID            = 15;
  ///DataSet         = 16;
  ///Bytes           = 17;
  ///File            = 18;
  ///Template        = 19;
  ///// Additional PropertyValue Types
  ///PropertySet     = 20;
  ///PropertySetList = 21;
  /// </summary>
  public sealed partial class Payload : pb::IMessage<Payload> {
    private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Payload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Eclipse.Tahu.Protobuf.SparkplugBCSharpReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload(Payload other) : this() {
      timestamp_ = other.timestamp_;
      metrics_ = other.metrics_.Clone();
      seq_ = other.seq_;
      uuid_ = other.uuid_;
      body_ = other.body_;
      details_ = other.details_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload Clone() {
      return new Payload(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private ulong timestamp_;
    /// <summary>
    /// Timestamp at message sending time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(18, global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Parser);
    private readonly pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric> metrics_ = new pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric>();
    /// <summary>
    /// Repeated forever - no limit in Google Protobufs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 3;
    private ulong seq_;
    /// <summary>
    /// Sequence number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 4;
    private string uuid_ = "";
    /// <summary>
    /// UUID to track message type in terms of schema definitions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 5;
    private pb::ByteString body_ = pb::ByteString.Empty;
    /// <summary>
    /// To optionally bypass the whole definition above
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
      get { return details_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Payload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Payload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if (Seq != other.Seq) return false;
      if (Uuid != other.Uuid) return false;
      if (Body != other.Body) return false;
      if(!details_.Equals(other.details_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      hash ^= metrics_.GetHashCode();
      if (Seq != 0UL) hash ^= Seq.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      hash ^= details_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      metrics_.WriteTo(output, _repeated_metrics_codec);
      if (Seq != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Seq);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uuid);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Body);
      }
      details_.WriteTo(output, _repeated_details_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (Seq != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Seq);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      size += details_.CalculateSize(_repeated_details_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Payload other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      metrics_.Add(other.metrics_);
      if (other.Seq != 0UL) {
        Seq = other.Seq;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      details_.Add(other.details_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 24: {
            Seq = input.ReadUInt64();
            break;
          }
          case 34: {
            Uuid = input.ReadString();
            break;
          }
          case 42: {
            Body = input.ReadBytes();
            break;
          }
          case 50: {
            details_.AddEntriesFrom(input, _repeated_details_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Payload message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Template : pb::IMessage<Template> {
        private static readonly pb::MessageParser<Template> _parser = new pb::MessageParser<Template>(() => new Template());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Template> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Template() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Template(Template other) : this() {
          version_ = other.version_;
          metrics_ = other.metrics_.Clone();
          parameters_ = other.parameters_.Clone();
          templateRef_ = other.templateRef_;
          isDefinition_ = other.isDefinition_;
          details_ = other.details_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Template Clone() {
          return new Template(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private string version_ = "";
        /// <summary>
        /// The version of the Template to prevent mismatches
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Version {
          get { return version_; }
          set {
            version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "metrics" field.</summary>
        public const int MetricsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric> _repeated_metrics_codec
            = pb::FieldCodec.ForMessage(18, global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Parser);
        private readonly pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric> metrics_ = new pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric>();
        /// <summary>
        /// Each metric is the name of the metric and the datatype of the member but does not contain a value
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric> Metrics {
          get { return metrics_; }
        }

        /// <summary>Field number for the "parameters" field.</summary>
        public const int ParametersFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter> _repeated_parameters_codec
            = pb::FieldCodec.ForMessage(26, global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Parser);
        private readonly pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter> parameters_ = new pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter> Parameters {
          get { return parameters_; }
        }

        /// <summary>Field number for the "template_ref" field.</summary>
        public const int TemplateRefFieldNumber = 4;
        private string templateRef_ = "";
        /// <summary>
        /// Reference to a template if this is extending a Template or an instance - must exist if an instance
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TemplateRef {
          get { return templateRef_; }
          set {
            templateRef_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "is_definition" field.</summary>
        public const int IsDefinitionFieldNumber = 5;
        private bool isDefinition_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsDefinition {
          get { return isDefinition_; }
          set {
            isDefinition_ = value;
          }
        }

        /// <summary>Field number for the "details" field.</summary>
        public const int DetailsFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
            = pb::FieldCodec.ForMessage(50, global::Google.Protobuf.WellKnownTypes.Any.Parser);
        private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
          get { return details_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Template);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Template other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Version != other.Version) return false;
          if(!metrics_.Equals(other.metrics_)) return false;
          if(!parameters_.Equals(other.parameters_)) return false;
          if (TemplateRef != other.TemplateRef) return false;
          if (IsDefinition != other.IsDefinition) return false;
          if(!details_.Equals(other.details_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Version.Length != 0) hash ^= Version.GetHashCode();
          hash ^= metrics_.GetHashCode();
          hash ^= parameters_.GetHashCode();
          if (TemplateRef.Length != 0) hash ^= TemplateRef.GetHashCode();
          if (IsDefinition != false) hash ^= IsDefinition.GetHashCode();
          hash ^= details_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Version.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Version);
          }
          metrics_.WriteTo(output, _repeated_metrics_codec);
          parameters_.WriteTo(output, _repeated_parameters_codec);
          if (TemplateRef.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TemplateRef);
          }
          if (IsDefinition != false) {
            output.WriteRawTag(40);
            output.WriteBool(IsDefinition);
          }
          details_.WriteTo(output, _repeated_details_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Version.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
          }
          size += metrics_.CalculateSize(_repeated_metrics_codec);
          size += parameters_.CalculateSize(_repeated_parameters_codec);
          if (TemplateRef.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateRef);
          }
          if (IsDefinition != false) {
            size += 1 + 1;
          }
          size += details_.CalculateSize(_repeated_details_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Template other) {
          if (other == null) {
            return;
          }
          if (other.Version.Length != 0) {
            Version = other.Version;
          }
          metrics_.Add(other.metrics_);
          parameters_.Add(other.parameters_);
          if (other.TemplateRef.Length != 0) {
            TemplateRef = other.TemplateRef;
          }
          if (other.IsDefinition != false) {
            IsDefinition = other.IsDefinition;
          }
          details_.Add(other.details_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Version = input.ReadString();
                break;
              }
              case 18: {
                metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
                break;
              }
              case 26: {
                parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
                break;
              }
              case 34: {
                TemplateRef = input.ReadString();
                break;
              }
              case 40: {
                IsDefinition = input.ReadBool();
                break;
              }
              case 50: {
                details_.AddEntriesFrom(input, _repeated_details_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Template message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Parameter : pb::IMessage<Parameter> {
            private static readonly pb::MessageParser<Parameter> _parser = new pb::MessageParser<Parameter>(() => new Parameter());
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Parameter> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Parameter() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Parameter(Parameter other) : this() {
              name_ = other.name_;
              type_ = other.type_;
              switch (other.ValueCase) {
                case ValueOneofCase.IntValue:
                  IntValue = other.IntValue;
                  break;
                case ValueOneofCase.LongValue:
                  LongValue = other.LongValue;
                  break;
                case ValueOneofCase.FloatValue:
                  FloatValue = other.FloatValue;
                  break;
                case ValueOneofCase.DoubleValue:
                  DoubleValue = other.DoubleValue;
                  break;
                case ValueOneofCase.BooleanValue:
                  BooleanValue = other.BooleanValue;
                  break;
                case ValueOneofCase.StringValue:
                  StringValue = other.StringValue;
                  break;
                case ValueOneofCase.ExtensionValue:
                  ExtensionValue = other.ExtensionValue.Clone();
                  break;
              }

            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Parameter Clone() {
              return new Parameter(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 2;
            private uint type_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint Type {
              get { return type_; }
              set {
                type_ = value;
              }
            }

            /// <summary>Field number for the "int_value" field.</summary>
            public const int IntValueFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint IntValue {
              get { return valueCase_ == ValueOneofCase.IntValue ? (uint) value_ : 0; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.IntValue;
              }
            }

            /// <summary>Field number for the "long_value" field.</summary>
            public const int LongValueFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong LongValue {
              get { return valueCase_ == ValueOneofCase.LongValue ? (ulong) value_ : 0UL; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.LongValue;
              }
            }

            /// <summary>Field number for the "float_value" field.</summary>
            public const int FloatValueFieldNumber = 5;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float FloatValue {
              get { return valueCase_ == ValueOneofCase.FloatValue ? (float) value_ : 0F; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.FloatValue;
              }
            }

            /// <summary>Field number for the "double_value" field.</summary>
            public const int DoubleValueFieldNumber = 6;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double DoubleValue {
              get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.DoubleValue;
              }
            }

            /// <summary>Field number for the "boolean_value" field.</summary>
            public const int BooleanValueFieldNumber = 7;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool BooleanValue {
              get { return valueCase_ == ValueOneofCase.BooleanValue ? (bool) value_ : false; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.BooleanValue;
              }
            }

            /// <summary>Field number for the "string_value" field.</summary>
            public const int StringValueFieldNumber = 8;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string StringValue {
              get { return valueCase_ == ValueOneofCase.StringValue ? (string) value_ : ""; }
              set {
                value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                valueCase_ = ValueOneofCase.StringValue;
              }
            }

            /// <summary>Field number for the "extension_value" field.</summary>
            public const int ExtensionValueFieldNumber = 9;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Types.ParameterValueExtension ExtensionValue {
              get { return valueCase_ == ValueOneofCase.ExtensionValue ? (global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Types.ParameterValueExtension) value_ : null; }
              set {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ExtensionValue;
              }
            }

            private object value_;
            /// <summary>Enum of possible cases for the "value" oneof.</summary>
            public enum ValueOneofCase {
              None = 0,
              IntValue = 3,
              LongValue = 4,
              FloatValue = 5,
              DoubleValue = 6,
              BooleanValue = 7,
              StringValue = 8,
              ExtensionValue = 9,
            }
            private ValueOneofCase valueCase_ = ValueOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ValueOneofCase ValueCase {
              get { return valueCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearValue() {
              valueCase_ = ValueOneofCase.None;
              value_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Parameter);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Parameter other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (Type != other.Type) return false;
              if (IntValue != other.IntValue) return false;
              if (LongValue != other.LongValue) return false;
              if (FloatValue != other.FloatValue) return false;
              if (DoubleValue != other.DoubleValue) return false;
              if (BooleanValue != other.BooleanValue) return false;
              if (StringValue != other.StringValue) return false;
              if (!object.Equals(ExtensionValue, other.ExtensionValue)) return false;
              if (ValueCase != other.ValueCase) return false;
              return true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Type != 0) hash ^= Type.GetHashCode();
              if (valueCase_ == ValueOneofCase.IntValue) hash ^= IntValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.LongValue) hash ^= LongValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.FloatValue) hash ^= FloatValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= DoubleValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.BooleanValue) hash ^= BooleanValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.ExtensionValue) hash ^= ExtensionValue.GetHashCode();
              hash ^= (int) valueCase_;
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Type != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(Type);
              }
              if (valueCase_ == ValueOneofCase.IntValue) {
                output.WriteRawTag(24);
                output.WriteUInt32(IntValue);
              }
              if (valueCase_ == ValueOneofCase.LongValue) {
                output.WriteRawTag(32);
                output.WriteUInt64(LongValue);
              }
              if (valueCase_ == ValueOneofCase.FloatValue) {
                output.WriteRawTag(45);
                output.WriteFloat(FloatValue);
              }
              if (valueCase_ == ValueOneofCase.DoubleValue) {
                output.WriteRawTag(49);
                output.WriteDouble(DoubleValue);
              }
              if (valueCase_ == ValueOneofCase.BooleanValue) {
                output.WriteRawTag(56);
                output.WriteBool(BooleanValue);
              }
              if (valueCase_ == ValueOneofCase.StringValue) {
                output.WriteRawTag(66);
                output.WriteString(StringValue);
              }
              if (valueCase_ == ValueOneofCase.ExtensionValue) {
                output.WriteRawTag(74);
                output.WriteMessage(ExtensionValue);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Type != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
              }
              if (valueCase_ == ValueOneofCase.IntValue) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IntValue);
              }
              if (valueCase_ == ValueOneofCase.LongValue) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LongValue);
              }
              if (valueCase_ == ValueOneofCase.FloatValue) {
                size += 1 + 4;
              }
              if (valueCase_ == ValueOneofCase.DoubleValue) {
                size += 1 + 8;
              }
              if (valueCase_ == ValueOneofCase.BooleanValue) {
                size += 1 + 1;
              }
              if (valueCase_ == ValueOneofCase.StringValue) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
              }
              if (valueCase_ == ValueOneofCase.ExtensionValue) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionValue);
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Parameter other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Type != 0) {
                Type = other.Type;
              }
              switch (other.ValueCase) {
                case ValueOneofCase.IntValue:
                  IntValue = other.IntValue;
                  break;
                case ValueOneofCase.LongValue:
                  LongValue = other.LongValue;
                  break;
                case ValueOneofCase.FloatValue:
                  FloatValue = other.FloatValue;
                  break;
                case ValueOneofCase.DoubleValue:
                  DoubleValue = other.DoubleValue;
                  break;
                case ValueOneofCase.BooleanValue:
                  BooleanValue = other.BooleanValue;
                  break;
                case ValueOneofCase.StringValue:
                  StringValue = other.StringValue;
                  break;
                case ValueOneofCase.ExtensionValue:
                  ExtensionValue = other.ExtensionValue;
                  break;
              }

            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    Type = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    IntValue = input.ReadUInt32();
                    break;
                  }
                  case 32: {
                    LongValue = input.ReadUInt64();
                    break;
                  }
                  case 45: {
                    FloatValue = input.ReadFloat();
                    break;
                  }
                  case 49: {
                    DoubleValue = input.ReadDouble();
                    break;
                  }
                  case 56: {
                    BooleanValue = input.ReadBool();
                    break;
                  }
                  case 66: {
                    StringValue = input.ReadString();
                    break;
                  }
                  case 74: {
                    global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Types.ParameterValueExtension subBuilder = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Types.ParameterValueExtension();
                    if (valueCase_ == ValueOneofCase.ExtensionValue) {
                      subBuilder.MergeFrom(ExtensionValue);
                    }
                    input.ReadMessage(subBuilder);
                    ExtensionValue = subBuilder;
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the Parameter message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ParameterValueExtension : pb::IMessage<ParameterValueExtension> {
                private static readonly pb::MessageParser<ParameterValueExtension> _parser = new pb::MessageParser<ParameterValueExtension>(() => new ParameterValueExtension());
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ParameterValueExtension> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template.Types.Parameter.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ParameterValueExtension() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ParameterValueExtension(ParameterValueExtension other) : this() {
                  extensions_ = other.extensions_.Clone();
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ParameterValueExtension Clone() {
                  return new ParameterValueExtension(this);
                }

                /// <summary>Field number for the "extensions" field.</summary>
                public const int ExtensionsFieldNumber = 1;
                private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_extensions_codec
                    = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
                private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> extensions_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Extensions {
                  get { return extensions_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ParameterValueExtension);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ParameterValueExtension other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if(!extensions_.Equals(other.extensions_)) return false;
                  return true;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  hash ^= extensions_.GetHashCode();
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  extensions_.WriteTo(output, _repeated_extensions_codec);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  size += extensions_.CalculateSize(_repeated_extensions_codec);
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ParameterValueExtension other) {
                  if (other == null) {
                    return;
                  }
                  extensions_.Add(other.extensions_);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        input.SkipLastField();
                        break;
                      case 10: {
                        extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class DataSet : pb::IMessage<DataSet> {
        private static readonly pb::MessageParser<DataSet> _parser = new pb::MessageParser<DataSet>(() => new DataSet());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DataSet> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataSet() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataSet(DataSet other) : this() {
          numOfColumns_ = other.numOfColumns_;
          columns_ = other.columns_.Clone();
          types_ = other.types_.Clone();
          rows_ = other.rows_.Clone();
          details_ = other.details_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataSet Clone() {
          return new DataSet(this);
        }

        /// <summary>Field number for the "num_of_columns" field.</summary>
        public const int NumOfColumnsFieldNumber = 1;
        private ulong numOfColumns_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong NumOfColumns {
          get { return numOfColumns_; }
          set {
            numOfColumns_ = value;
          }
        }

        /// <summary>Field number for the "columns" field.</summary>
        public const int ColumnsFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_columns_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Columns {
          get { return columns_; }
        }

        /// <summary>Field number for the "types" field.</summary>
        public const int Types_FieldNumber = 3;
        private static readonly pb::FieldCodec<uint> _repeated_types_codec
            = pb::FieldCodec.ForUInt32(26);
        private readonly pbc::RepeatedField<uint> types_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> Types_ {
          get { return types_; }
        }

        /// <summary>Field number for the "rows" field.</summary>
        public const int RowsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.Row> _repeated_rows_codec
            = pb::FieldCodec.ForMessage(34, global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.Row.Parser);
        private readonly pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.Row> rows_ = new pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.Row>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.Row> Rows {
          get { return rows_; }
        }

        /// <summary>Field number for the "details" field.</summary>
        public const int DetailsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Protobuf.WellKnownTypes.Any.Parser);
        private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
          get { return details_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DataSet);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DataSet other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NumOfColumns != other.NumOfColumns) return false;
          if(!columns_.Equals(other.columns_)) return false;
          if(!types_.Equals(other.types_)) return false;
          if(!rows_.Equals(other.rows_)) return false;
          if(!details_.Equals(other.details_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NumOfColumns != 0UL) hash ^= NumOfColumns.GetHashCode();
          hash ^= columns_.GetHashCode();
          hash ^= types_.GetHashCode();
          hash ^= rows_.GetHashCode();
          hash ^= details_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (NumOfColumns != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(NumOfColumns);
          }
          columns_.WriteTo(output, _repeated_columns_codec);
          types_.WriteTo(output, _repeated_types_codec);
          rows_.WriteTo(output, _repeated_rows_codec);
          details_.WriteTo(output, _repeated_details_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NumOfColumns != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumOfColumns);
          }
          size += columns_.CalculateSize(_repeated_columns_codec);
          size += types_.CalculateSize(_repeated_types_codec);
          size += rows_.CalculateSize(_repeated_rows_codec);
          size += details_.CalculateSize(_repeated_details_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DataSet other) {
          if (other == null) {
            return;
          }
          if (other.NumOfColumns != 0UL) {
            NumOfColumns = other.NumOfColumns;
          }
          columns_.Add(other.columns_);
          types_.Add(other.types_);
          rows_.Add(other.rows_);
          details_.Add(other.details_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                NumOfColumns = input.ReadUInt64();
                break;
              }
              case 18: {
                columns_.AddEntriesFrom(input, _repeated_columns_codec);
                break;
              }
              case 26:
              case 24: {
                types_.AddEntriesFrom(input, _repeated_types_codec);
                break;
              }
              case 34: {
                rows_.AddEntriesFrom(input, _repeated_rows_codec);
                break;
              }
              case 42: {
                details_.AddEntriesFrom(input, _repeated_details_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the DataSet message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class DataSetValue : pb::IMessage<DataSetValue> {
            private static readonly pb::MessageParser<DataSetValue> _parser = new pb::MessageParser<DataSetValue>(() => new DataSetValue());
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DataSetValue> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DataSetValue() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DataSetValue(DataSetValue other) : this() {
              switch (other.ValueCase) {
                case ValueOneofCase.IntValue:
                  IntValue = other.IntValue;
                  break;
                case ValueOneofCase.LongValue:
                  LongValue = other.LongValue;
                  break;
                case ValueOneofCase.FloatValue:
                  FloatValue = other.FloatValue;
                  break;
                case ValueOneofCase.DoubleValue:
                  DoubleValue = other.DoubleValue;
                  break;
                case ValueOneofCase.BooleanValue:
                  BooleanValue = other.BooleanValue;
                  break;
                case ValueOneofCase.StringValue:
                  StringValue = other.StringValue;
                  break;
                case ValueOneofCase.ExtensionValue:
                  ExtensionValue = other.ExtensionValue.Clone();
                  break;
              }

            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DataSetValue Clone() {
              return new DataSetValue(this);
            }

            /// <summary>Field number for the "int_value" field.</summary>
            public const int IntValueFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint IntValue {
              get { return valueCase_ == ValueOneofCase.IntValue ? (uint) value_ : 0; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.IntValue;
              }
            }

            /// <summary>Field number for the "long_value" field.</summary>
            public const int LongValueFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong LongValue {
              get { return valueCase_ == ValueOneofCase.LongValue ? (ulong) value_ : 0UL; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.LongValue;
              }
            }

            /// <summary>Field number for the "float_value" field.</summary>
            public const int FloatValueFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float FloatValue {
              get { return valueCase_ == ValueOneofCase.FloatValue ? (float) value_ : 0F; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.FloatValue;
              }
            }

            /// <summary>Field number for the "double_value" field.</summary>
            public const int DoubleValueFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double DoubleValue {
              get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.DoubleValue;
              }
            }

            /// <summary>Field number for the "boolean_value" field.</summary>
            public const int BooleanValueFieldNumber = 5;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool BooleanValue {
              get { return valueCase_ == ValueOneofCase.BooleanValue ? (bool) value_ : false; }
              set {
                value_ = value;
                valueCase_ = ValueOneofCase.BooleanValue;
              }
            }

            /// <summary>Field number for the "string_value" field.</summary>
            public const int StringValueFieldNumber = 6;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string StringValue {
              get { return valueCase_ == ValueOneofCase.StringValue ? (string) value_ : ""; }
              set {
                value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                valueCase_ = ValueOneofCase.StringValue;
              }
            }

            /// <summary>Field number for the "extension_value" field.</summary>
            public const int ExtensionValueFieldNumber = 7;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Types.DataSetValueExtension ExtensionValue {
              get { return valueCase_ == ValueOneofCase.ExtensionValue ? (global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Types.DataSetValueExtension) value_ : null; }
              set {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ExtensionValue;
              }
            }

            private object value_;
            /// <summary>Enum of possible cases for the "value" oneof.</summary>
            public enum ValueOneofCase {
              None = 0,
              IntValue = 1,
              LongValue = 2,
              FloatValue = 3,
              DoubleValue = 4,
              BooleanValue = 5,
              StringValue = 6,
              ExtensionValue = 7,
            }
            private ValueOneofCase valueCase_ = ValueOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ValueOneofCase ValueCase {
              get { return valueCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearValue() {
              valueCase_ = ValueOneofCase.None;
              value_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DataSetValue);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DataSetValue other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (IntValue != other.IntValue) return false;
              if (LongValue != other.LongValue) return false;
              if (FloatValue != other.FloatValue) return false;
              if (DoubleValue != other.DoubleValue) return false;
              if (BooleanValue != other.BooleanValue) return false;
              if (StringValue != other.StringValue) return false;
              if (!object.Equals(ExtensionValue, other.ExtensionValue)) return false;
              if (ValueCase != other.ValueCase) return false;
              return true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (valueCase_ == ValueOneofCase.IntValue) hash ^= IntValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.LongValue) hash ^= LongValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.FloatValue) hash ^= FloatValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= DoubleValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.BooleanValue) hash ^= BooleanValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
              if (valueCase_ == ValueOneofCase.ExtensionValue) hash ^= ExtensionValue.GetHashCode();
              hash ^= (int) valueCase_;
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (valueCase_ == ValueOneofCase.IntValue) {
                output.WriteRawTag(8);
                output.WriteUInt32(IntValue);
              }
              if (valueCase_ == ValueOneofCase.LongValue) {
                output.WriteRawTag(16);
                output.WriteUInt64(LongValue);
              }
              if (valueCase_ == ValueOneofCase.FloatValue) {
                output.WriteRawTag(29);
                output.WriteFloat(FloatValue);
              }
              if (valueCase_ == ValueOneofCase.DoubleValue) {
                output.WriteRawTag(33);
                output.WriteDouble(DoubleValue);
              }
              if (valueCase_ == ValueOneofCase.BooleanValue) {
                output.WriteRawTag(40);
                output.WriteBool(BooleanValue);
              }
              if (valueCase_ == ValueOneofCase.StringValue) {
                output.WriteRawTag(50);
                output.WriteString(StringValue);
              }
              if (valueCase_ == ValueOneofCase.ExtensionValue) {
                output.WriteRawTag(58);
                output.WriteMessage(ExtensionValue);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (valueCase_ == ValueOneofCase.IntValue) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IntValue);
              }
              if (valueCase_ == ValueOneofCase.LongValue) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LongValue);
              }
              if (valueCase_ == ValueOneofCase.FloatValue) {
                size += 1 + 4;
              }
              if (valueCase_ == ValueOneofCase.DoubleValue) {
                size += 1 + 8;
              }
              if (valueCase_ == ValueOneofCase.BooleanValue) {
                size += 1 + 1;
              }
              if (valueCase_ == ValueOneofCase.StringValue) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
              }
              if (valueCase_ == ValueOneofCase.ExtensionValue) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionValue);
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DataSetValue other) {
              if (other == null) {
                return;
              }
              switch (other.ValueCase) {
                case ValueOneofCase.IntValue:
                  IntValue = other.IntValue;
                  break;
                case ValueOneofCase.LongValue:
                  LongValue = other.LongValue;
                  break;
                case ValueOneofCase.FloatValue:
                  FloatValue = other.FloatValue;
                  break;
                case ValueOneofCase.DoubleValue:
                  DoubleValue = other.DoubleValue;
                  break;
                case ValueOneofCase.BooleanValue:
                  BooleanValue = other.BooleanValue;
                  break;
                case ValueOneofCase.StringValue:
                  StringValue = other.StringValue;
                  break;
                case ValueOneofCase.ExtensionValue:
                  ExtensionValue = other.ExtensionValue;
                  break;
              }

            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 8: {
                    IntValue = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    LongValue = input.ReadUInt64();
                    break;
                  }
                  case 29: {
                    FloatValue = input.ReadFloat();
                    break;
                  }
                  case 33: {
                    DoubleValue = input.ReadDouble();
                    break;
                  }
                  case 40: {
                    BooleanValue = input.ReadBool();
                    break;
                  }
                  case 50: {
                    StringValue = input.ReadString();
                    break;
                  }
                  case 58: {
                    global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Types.DataSetValueExtension subBuilder = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Types.DataSetValueExtension();
                    if (valueCase_ == ValueOneofCase.ExtensionValue) {
                      subBuilder.MergeFrom(ExtensionValue);
                    }
                    input.ReadMessage(subBuilder);
                    ExtensionValue = subBuilder;
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the DataSetValue message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class DataSetValueExtension : pb::IMessage<DataSetValueExtension> {
                private static readonly pb::MessageParser<DataSetValueExtension> _parser = new pb::MessageParser<DataSetValueExtension>(() => new DataSetValueExtension());
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<DataSetValueExtension> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public DataSetValueExtension() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public DataSetValueExtension(DataSetValueExtension other) : this() {
                  details_ = other.details_.Clone();
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public DataSetValueExtension Clone() {
                  return new DataSetValueExtension(this);
                }

                /// <summary>Field number for the "details" field.</summary>
                public const int DetailsFieldNumber = 1;
                private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
                    = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
                private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
                  get { return details_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as DataSetValueExtension);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(DataSetValueExtension other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if(!details_.Equals(other.details_)) return false;
                  return true;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  hash ^= details_.GetHashCode();
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  details_.WriteTo(output, _repeated_details_codec);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  size += details_.CalculateSize(_repeated_details_codec);
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(DataSetValueExtension other) {
                  if (other == null) {
                    return;
                  }
                  details_.Add(other.details_);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        input.SkipLastField();
                        break;
                      case 10: {
                        details_.AddEntriesFrom(input, _repeated_details_codec);
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

          public sealed partial class Row : pb::IMessage<Row> {
            private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Row> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Row() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Row(Row other) : this() {
              elements_ = other.elements_.Clone();
              details_ = other.details_.Clone();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Row Clone() {
              return new Row(this);
            }

            /// <summary>Field number for the "elements" field.</summary>
            public const int ElementsFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue> _repeated_elements_codec
                = pb::FieldCodec.ForMessage(10, global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue.Parser);
            private readonly pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue> elements_ = new pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet.Types.DataSetValue> Elements {
              get { return elements_; }
            }

            /// <summary>Field number for the "details" field.</summary>
            public const int DetailsFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Any.Parser);
            private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
              get { return details_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Row other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!elements_.Equals(other.elements_)) return false;
              if(!details_.Equals(other.details_)) return false;
              return true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= elements_.GetHashCode();
              hash ^= details_.GetHashCode();
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              elements_.WriteTo(output, _repeated_elements_codec);
              details_.WriteTo(output, _repeated_details_codec);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += elements_.CalculateSize(_repeated_elements_codec);
              size += details_.CalculateSize(_repeated_details_codec);
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Row other) {
              if (other == null) {
                return;
              }
              elements_.Add(other.elements_);
              details_.Add(other.details_);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    elements_.AddEntriesFrom(input, _repeated_elements_codec);
                    break;
                  }
                  case 18: {
                    details_.AddEntriesFrom(input, _repeated_details_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class PropertyValue : pb::IMessage<PropertyValue> {
        private static readonly pb::MessageParser<PropertyValue> _parser = new pb::MessageParser<PropertyValue>(() => new PropertyValue());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PropertyValue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertyValue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertyValue(PropertyValue other) : this() {
          type_ = other.type_;
          isNull_ = other.isNull_;
          switch (other.ValueCase) {
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.LongValue:
              LongValue = other.LongValue;
              break;
            case ValueOneofCase.FloatValue:
              FloatValue = other.FloatValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.BooleanValue:
              BooleanValue = other.BooleanValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.PropertysetValue:
              PropertysetValue = other.PropertysetValue.Clone();
              break;
            case ValueOneofCase.PropertysetsValue:
              PropertysetsValue = other.PropertysetsValue.Clone();
              break;
            case ValueOneofCase.ExtensionValue:
              ExtensionValue = other.ExtensionValue.Clone();
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertyValue Clone() {
          return new PropertyValue(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private uint type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "is_null" field.</summary>
        public const int IsNullFieldNumber = 2;
        private bool isNull_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsNull {
          get { return isNull_; }
          set {
            isNull_ = value;
          }
        }

        /// <summary>Field number for the "int_value" field.</summary>
        public const int IntValueFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint IntValue {
          get { return valueCase_ == ValueOneofCase.IntValue ? (uint) value_ : 0; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.IntValue;
          }
        }

        /// <summary>Field number for the "long_value" field.</summary>
        public const int LongValueFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong LongValue {
          get { return valueCase_ == ValueOneofCase.LongValue ? (ulong) value_ : 0UL; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.LongValue;
          }
        }

        /// <summary>Field number for the "float_value" field.</summary>
        public const int FloatValueFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float FloatValue {
          get { return valueCase_ == ValueOneofCase.FloatValue ? (float) value_ : 0F; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.FloatValue;
          }
        }

        /// <summary>Field number for the "double_value" field.</summary>
        public const int DoubleValueFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double DoubleValue {
          get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.DoubleValue;
          }
        }

        /// <summary>Field number for the "boolean_value" field.</summary>
        public const int BooleanValueFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool BooleanValue {
          get { return valueCase_ == ValueOneofCase.BooleanValue ? (bool) value_ : false; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.BooleanValue;
          }
        }

        /// <summary>Field number for the "string_value" field.</summary>
        public const int StringValueFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StringValue {
          get { return valueCase_ == ValueOneofCase.StringValue ? (string) value_ : ""; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.StringValue;
          }
        }

        /// <summary>Field number for the "propertyset_value" field.</summary>
        public const int PropertysetValueFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet PropertysetValue {
          get { return valueCase_ == ValueOneofCase.PropertysetValue ? (global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.PropertysetValue;
          }
        }

        /// <summary>Field number for the "propertysets_value" field.</summary>
        public const int PropertysetsValueFieldNumber = 10;
        /// <summary>
        /// List of Property Values
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySetList PropertysetsValue {
          get { return valueCase_ == ValueOneofCase.PropertysetsValue ? (global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySetList) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.PropertysetsValue;
          }
        }

        /// <summary>Field number for the "extension_value" field.</summary>
        public const int ExtensionValueFieldNumber = 11;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Types.PropertyValueExtension ExtensionValue {
          get { return valueCase_ == ValueOneofCase.ExtensionValue ? (global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Types.PropertyValueExtension) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ExtensionValue;
          }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase {
          None = 0,
          IntValue = 3,
          LongValue = 4,
          FloatValue = 5,
          DoubleValue = 6,
          BooleanValue = 7,
          StringValue = 8,
          PropertysetValue = 9,
          PropertysetsValue = 10,
          ExtensionValue = 11,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ValueOneofCase ValueCase {
          get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue() {
          valueCase_ = ValueOneofCase.None;
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PropertyValue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PropertyValue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (IsNull != other.IsNull) return false;
          if (IntValue != other.IntValue) return false;
          if (LongValue != other.LongValue) return false;
          if (FloatValue != other.FloatValue) return false;
          if (DoubleValue != other.DoubleValue) return false;
          if (BooleanValue != other.BooleanValue) return false;
          if (StringValue != other.StringValue) return false;
          if (!object.Equals(PropertysetValue, other.PropertysetValue)) return false;
          if (!object.Equals(PropertysetsValue, other.PropertysetsValue)) return false;
          if (!object.Equals(ExtensionValue, other.ExtensionValue)) return false;
          if (ValueCase != other.ValueCase) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (IsNull != false) hash ^= IsNull.GetHashCode();
          if (valueCase_ == ValueOneofCase.IntValue) hash ^= IntValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.LongValue) hash ^= LongValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.FloatValue) hash ^= FloatValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= DoubleValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.BooleanValue) hash ^= BooleanValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.PropertysetValue) hash ^= PropertysetValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.PropertysetsValue) hash ^= PropertysetsValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.ExtensionValue) hash ^= ExtensionValue.GetHashCode();
          hash ^= (int) valueCase_;
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Type);
          }
          if (IsNull != false) {
            output.WriteRawTag(16);
            output.WriteBool(IsNull);
          }
          if (valueCase_ == ValueOneofCase.IntValue) {
            output.WriteRawTag(24);
            output.WriteUInt32(IntValue);
          }
          if (valueCase_ == ValueOneofCase.LongValue) {
            output.WriteRawTag(32);
            output.WriteUInt64(LongValue);
          }
          if (valueCase_ == ValueOneofCase.FloatValue) {
            output.WriteRawTag(45);
            output.WriteFloat(FloatValue);
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            output.WriteRawTag(49);
            output.WriteDouble(DoubleValue);
          }
          if (valueCase_ == ValueOneofCase.BooleanValue) {
            output.WriteRawTag(56);
            output.WriteBool(BooleanValue);
          }
          if (valueCase_ == ValueOneofCase.StringValue) {
            output.WriteRawTag(66);
            output.WriteString(StringValue);
          }
          if (valueCase_ == ValueOneofCase.PropertysetValue) {
            output.WriteRawTag(74);
            output.WriteMessage(PropertysetValue);
          }
          if (valueCase_ == ValueOneofCase.PropertysetsValue) {
            output.WriteRawTag(82);
            output.WriteMessage(PropertysetsValue);
          }
          if (valueCase_ == ValueOneofCase.ExtensionValue) {
            output.WriteRawTag(90);
            output.WriteMessage(ExtensionValue);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
          }
          if (IsNull != false) {
            size += 1 + 1;
          }
          if (valueCase_ == ValueOneofCase.IntValue) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IntValue);
          }
          if (valueCase_ == ValueOneofCase.LongValue) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LongValue);
          }
          if (valueCase_ == ValueOneofCase.FloatValue) {
            size += 1 + 4;
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            size += 1 + 8;
          }
          if (valueCase_ == ValueOneofCase.BooleanValue) {
            size += 1 + 1;
          }
          if (valueCase_ == ValueOneofCase.StringValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
          }
          if (valueCase_ == ValueOneofCase.PropertysetValue) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertysetValue);
          }
          if (valueCase_ == ValueOneofCase.PropertysetsValue) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertysetsValue);
          }
          if (valueCase_ == ValueOneofCase.ExtensionValue) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionValue);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PropertyValue other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.IsNull != false) {
            IsNull = other.IsNull;
          }
          switch (other.ValueCase) {
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.LongValue:
              LongValue = other.LongValue;
              break;
            case ValueOneofCase.FloatValue:
              FloatValue = other.FloatValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.BooleanValue:
              BooleanValue = other.BooleanValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.PropertysetValue:
              PropertysetValue = other.PropertysetValue;
              break;
            case ValueOneofCase.PropertysetsValue:
              PropertysetsValue = other.PropertysetsValue;
              break;
            case ValueOneofCase.ExtensionValue:
              ExtensionValue = other.ExtensionValue;
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Type = input.ReadUInt32();
                break;
              }
              case 16: {
                IsNull = input.ReadBool();
                break;
              }
              case 24: {
                IntValue = input.ReadUInt32();
                break;
              }
              case 32: {
                LongValue = input.ReadUInt64();
                break;
              }
              case 45: {
                FloatValue = input.ReadFloat();
                break;
              }
              case 49: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 56: {
                BooleanValue = input.ReadBool();
                break;
              }
              case 66: {
                StringValue = input.ReadString();
                break;
              }
              case 74: {
                global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet subBuilder = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet();
                if (valueCase_ == ValueOneofCase.PropertysetValue) {
                  subBuilder.MergeFrom(PropertysetValue);
                }
                input.ReadMessage(subBuilder);
                PropertysetValue = subBuilder;
                break;
              }
              case 82: {
                global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySetList subBuilder = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySetList();
                if (valueCase_ == ValueOneofCase.PropertysetsValue) {
                  subBuilder.MergeFrom(PropertysetsValue);
                }
                input.ReadMessage(subBuilder);
                PropertysetsValue = subBuilder;
                break;
              }
              case 90: {
                global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Types.PropertyValueExtension subBuilder = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Types.PropertyValueExtension();
                if (valueCase_ == ValueOneofCase.ExtensionValue) {
                  subBuilder.MergeFrom(ExtensionValue);
                }
                input.ReadMessage(subBuilder);
                ExtensionValue = subBuilder;
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the PropertyValue message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class PropertyValueExtension : pb::IMessage<PropertyValueExtension> {
            private static readonly pb::MessageParser<PropertyValueExtension> _parser = new pb::MessageParser<PropertyValueExtension>(() => new PropertyValueExtension());
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PropertyValueExtension> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PropertyValueExtension() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PropertyValueExtension(PropertyValueExtension other) : this() {
              details_ = other.details_.Clone();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PropertyValueExtension Clone() {
              return new PropertyValueExtension(this);
            }

            /// <summary>Field number for the "details" field.</summary>
            public const int DetailsFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
            private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
              get { return details_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PropertyValueExtension);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PropertyValueExtension other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!details_.Equals(other.details_)) return false;
              return true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= details_.GetHashCode();
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              details_.WriteTo(output, _repeated_details_codec);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += details_.CalculateSize(_repeated_details_codec);
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PropertyValueExtension other) {
              if (other == null) {
                return;
              }
              details_.Add(other.details_);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    details_.AddEntriesFrom(input, _repeated_details_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class PropertySet : pb::IMessage<PropertySet> {
        private static readonly pb::MessageParser<PropertySet> _parser = new pb::MessageParser<PropertySet>(() => new PropertySet());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PropertySet> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertySet() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertySet(PropertySet other) : this() {
          keys_ = other.keys_.Clone();
          values_ = other.values_.Clone();
          details_ = other.details_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertySet Clone() {
          return new PropertySet(this);
        }

        /// <summary>Field number for the "keys" field.</summary>
        public const int KeysFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_keys_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Names of the properties
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Keys {
          get { return keys_; }
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue> _repeated_values_codec
            = pb::FieldCodec.ForMessage(18, global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue.Parser);
        private readonly pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue> values_ = new pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertyValue> Values {
          get { return values_; }
        }

        /// <summary>Field number for the "details" field.</summary>
        public const int DetailsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
            = pb::FieldCodec.ForMessage(26, global::Google.Protobuf.WellKnownTypes.Any.Parser);
        private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
          get { return details_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PropertySet);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PropertySet other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!keys_.Equals(other.keys_)) return false;
          if(!values_.Equals(other.values_)) return false;
          if(!details_.Equals(other.details_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= keys_.GetHashCode();
          hash ^= values_.GetHashCode();
          hash ^= details_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          keys_.WriteTo(output, _repeated_keys_codec);
          values_.WriteTo(output, _repeated_values_codec);
          details_.WriteTo(output, _repeated_details_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += keys_.CalculateSize(_repeated_keys_codec);
          size += values_.CalculateSize(_repeated_values_codec);
          size += details_.CalculateSize(_repeated_details_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PropertySet other) {
          if (other == null) {
            return;
          }
          keys_.Add(other.keys_);
          values_.Add(other.values_);
          details_.Add(other.details_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                keys_.AddEntriesFrom(input, _repeated_keys_codec);
                break;
              }
              case 18: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
              case 26: {
                details_.AddEntriesFrom(input, _repeated_details_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class PropertySetList : pb::IMessage<PropertySetList> {
        private static readonly pb::MessageParser<PropertySetList> _parser = new pb::MessageParser<PropertySetList>(() => new PropertySetList());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PropertySetList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertySetList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertySetList(PropertySetList other) : this() {
          propertyset_ = other.propertyset_.Clone();
          details_ = other.details_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PropertySetList Clone() {
          return new PropertySetList(this);
        }

        /// <summary>Field number for the "propertyset" field.</summary>
        public const int PropertysetFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet> _repeated_propertyset_codec
            = pb::FieldCodec.ForMessage(10, global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet.Parser);
        private readonly pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet> propertyset_ = new pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet> Propertyset {
          get { return propertyset_; }
        }

        /// <summary>Field number for the "details" field.</summary>
        public const int DetailsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Any.Parser);
        private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
          get { return details_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PropertySetList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PropertySetList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!propertyset_.Equals(other.propertyset_)) return false;
          if(!details_.Equals(other.details_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= propertyset_.GetHashCode();
          hash ^= details_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          propertyset_.WriteTo(output, _repeated_propertyset_codec);
          details_.WriteTo(output, _repeated_details_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += propertyset_.CalculateSize(_repeated_propertyset_codec);
          size += details_.CalculateSize(_repeated_details_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PropertySetList other) {
          if (other == null) {
            return;
          }
          propertyset_.Add(other.propertyset_);
          details_.Add(other.details_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                propertyset_.AddEntriesFrom(input, _repeated_propertyset_codec);
                break;
              }
              case 18: {
                details_.AddEntriesFrom(input, _repeated_details_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MetaData : pb::IMessage<MetaData> {
        private static readonly pb::MessageParser<MetaData> _parser = new pb::MessageParser<MetaData>(() => new MetaData());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MetaData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetaData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetaData(MetaData other) : this() {
          isMultiPart_ = other.isMultiPart_;
          contentType_ = other.contentType_;
          size_ = other.size_;
          seq_ = other.seq_;
          fileName_ = other.fileName_;
          fileType_ = other.fileType_;
          md5_ = other.md5_;
          description_ = other.description_;
          details_ = other.details_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetaData Clone() {
          return new MetaData(this);
        }

        /// <summary>Field number for the "is_multi_part" field.</summary>
        public const int IsMultiPartFieldNumber = 1;
        private bool isMultiPart_;
        /// <summary>
        /// Bytes specific metadata
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsMultiPart {
          get { return isMultiPart_; }
          set {
            isMultiPart_ = value;
          }
        }

        /// <summary>Field number for the "content_type" field.</summary>
        public const int ContentTypeFieldNumber = 2;
        private string contentType_ = "";
        /// <summary>
        /// General metadata
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContentType {
          get { return contentType_; }
          set {
            contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 3;
        private ulong size_;
        /// <summary>
        /// File size, String size, Multi-part size, etc
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        /// <summary>Field number for the "seq" field.</summary>
        public const int SeqFieldNumber = 4;
        private ulong seq_;
        /// <summary>
        /// Sequence number for multi-part messages
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Seq {
          get { return seq_; }
          set {
            seq_ = value;
          }
        }

        /// <summary>Field number for the "file_name" field.</summary>
        public const int FileNameFieldNumber = 5;
        private string fileName_ = "";
        /// <summary>
        /// File metadata
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FileName {
          get { return fileName_; }
          set {
            fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "file_type" field.</summary>
        public const int FileTypeFieldNumber = 6;
        private string fileType_ = "";
        /// <summary>
        /// File type (i.e. xml, json, txt, cpp, etc)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FileType {
          get { return fileType_; }
          set {
            fileType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "md5" field.</summary>
        public const int Md5FieldNumber = 7;
        private string md5_ = "";
        /// <summary>
        /// md5 of data
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Md5 {
          get { return md5_; }
          set {
            md5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 8;
        private string description_ = "";
        /// <summary>
        /// Catchalls and future expansion
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "details" field.</summary>
        public const int DetailsFieldNumber = 9;
        private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
            = pb::FieldCodec.ForMessage(74, global::Google.Protobuf.WellKnownTypes.Any.Parser);
        private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
          get { return details_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MetaData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MetaData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IsMultiPart != other.IsMultiPart) return false;
          if (ContentType != other.ContentType) return false;
          if (Size != other.Size) return false;
          if (Seq != other.Seq) return false;
          if (FileName != other.FileName) return false;
          if (FileType != other.FileType) return false;
          if (Md5 != other.Md5) return false;
          if (Description != other.Description) return false;
          if(!details_.Equals(other.details_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (IsMultiPart != false) hash ^= IsMultiPart.GetHashCode();
          if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
          if (Size != 0UL) hash ^= Size.GetHashCode();
          if (Seq != 0UL) hash ^= Seq.GetHashCode();
          if (FileName.Length != 0) hash ^= FileName.GetHashCode();
          if (FileType.Length != 0) hash ^= FileType.GetHashCode();
          if (Md5.Length != 0) hash ^= Md5.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          hash ^= details_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (IsMultiPart != false) {
            output.WriteRawTag(8);
            output.WriteBool(IsMultiPart);
          }
          if (ContentType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ContentType);
          }
          if (Size != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Size);
          }
          if (Seq != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(Seq);
          }
          if (FileName.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(FileName);
          }
          if (FileType.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(FileType);
          }
          if (Md5.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Md5);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Description);
          }
          details_.WriteTo(output, _repeated_details_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (IsMultiPart != false) {
            size += 1 + 1;
          }
          if (ContentType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
          }
          if (Size != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Size);
          }
          if (Seq != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Seq);
          }
          if (FileName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
          }
          if (FileType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FileType);
          }
          if (Md5.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Md5);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          size += details_.CalculateSize(_repeated_details_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MetaData other) {
          if (other == null) {
            return;
          }
          if (other.IsMultiPart != false) {
            IsMultiPart = other.IsMultiPart;
          }
          if (other.ContentType.Length != 0) {
            ContentType = other.ContentType;
          }
          if (other.Size != 0UL) {
            Size = other.Size;
          }
          if (other.Seq != 0UL) {
            Seq = other.Seq;
          }
          if (other.FileName.Length != 0) {
            FileName = other.FileName;
          }
          if (other.FileType.Length != 0) {
            FileType = other.FileType;
          }
          if (other.Md5.Length != 0) {
            Md5 = other.Md5;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          details_.Add(other.details_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                IsMultiPart = input.ReadBool();
                break;
              }
              case 18: {
                ContentType = input.ReadString();
                break;
              }
              case 24: {
                Size = input.ReadUInt64();
                break;
              }
              case 32: {
                Seq = input.ReadUInt64();
                break;
              }
              case 42: {
                FileName = input.ReadString();
                break;
              }
              case 50: {
                FileType = input.ReadString();
                break;
              }
              case 58: {
                Md5 = input.ReadString();
                break;
              }
              case 66: {
                Description = input.ReadString();
                break;
              }
              case 74: {
                details_.AddEntriesFrom(input, _repeated_details_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Metric : pb::IMessage<Metric> {
        private static readonly pb::MessageParser<Metric> _parser = new pb::MessageParser<Metric>(() => new Metric());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Metric> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Metric() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Metric(Metric other) : this() {
          name_ = other.name_;
          alias_ = other.alias_;
          timestamp_ = other.timestamp_;
          datatype_ = other.datatype_;
          isHistorical_ = other.isHistorical_;
          isTransient_ = other.isTransient_;
          isNull_ = other.isNull_;
          Metadata = other.metadata_ != null ? other.Metadata.Clone() : null;
          Properties = other.properties_ != null ? other.Properties.Clone() : null;
          switch (other.ValueCase) {
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.LongValue:
              LongValue = other.LongValue;
              break;
            case ValueOneofCase.FloatValue:
              FloatValue = other.FloatValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.BooleanValue:
              BooleanValue = other.BooleanValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.BytesValue:
              BytesValue = other.BytesValue;
              break;
            case ValueOneofCase.DatasetValue:
              DatasetValue = other.DatasetValue.Clone();
              break;
            case ValueOneofCase.TemplateValue:
              TemplateValue = other.TemplateValue.Clone();
              break;
            case ValueOneofCase.ExtensionValue:
              ExtensionValue = other.ExtensionValue.Clone();
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Metric Clone() {
          return new Metric(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// Metric name - should only be included on birth
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "alias" field.</summary>
        public const int AliasFieldNumber = 2;
        private ulong alias_;
        /// <summary>
        /// Metric alias - tied to name on birth and included in all later DATA messages
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Alias {
          get { return alias_; }
          set {
            alias_ = value;
          }
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 3;
        private ulong timestamp_;
        /// <summary>
        /// Timestamp associated with data acquisition time
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Timestamp {
          get { return timestamp_; }
          set {
            timestamp_ = value;
          }
        }

        /// <summary>Field number for the "datatype" field.</summary>
        public const int DatatypeFieldNumber = 4;
        private uint datatype_;
        /// <summary>
        /// DataType of the metric/tag value
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Datatype {
          get { return datatype_; }
          set {
            datatype_ = value;
          }
        }

        /// <summary>Field number for the "is_historical" field.</summary>
        public const int IsHistoricalFieldNumber = 5;
        private bool isHistorical_;
        /// <summary>
        /// If this is historical data and should not update real time tag
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsHistorical {
          get { return isHistorical_; }
          set {
            isHistorical_ = value;
          }
        }

        /// <summary>Field number for the "is_transient" field.</summary>
        public const int IsTransientFieldNumber = 6;
        private bool isTransient_;
        /// <summary>
        /// Tells consuming clients such as MQTT Engine to not store this as a tag
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsTransient {
          get { return isTransient_; }
          set {
            isTransient_ = value;
          }
        }

        /// <summary>Field number for the "is_null" field.</summary>
        public const int IsNullFieldNumber = 7;
        private bool isNull_;
        /// <summary>
        /// If this is null - explicitly say so rather than using -1, false, etc for some datatypes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsNull {
          get { return isNull_; }
          set {
            isNull_ = value;
          }
        }

        /// <summary>Field number for the "metadata" field.</summary>
        public const int MetadataFieldNumber = 8;
        private global::Org.Eclipse.Tahu.Protobuf.Payload.Types.MetaData metadata_;
        /// <summary>
        /// Metadata for the payload
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.MetaData Metadata {
          get { return metadata_; }
          set {
            metadata_ = value;
          }
        }

        /// <summary>Field number for the "properties" field.</summary>
        public const int PropertiesFieldNumber = 9;
        private global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet properties_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet Properties {
          get { return properties_; }
          set {
            properties_ = value;
          }
        }

        /// <summary>Field number for the "int_value" field.</summary>
        public const int IntValueFieldNumber = 10;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint IntValue {
          get { return valueCase_ == ValueOneofCase.IntValue ? (uint) value_ : 0; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.IntValue;
          }
        }

        /// <summary>Field number for the "long_value" field.</summary>
        public const int LongValueFieldNumber = 11;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong LongValue {
          get { return valueCase_ == ValueOneofCase.LongValue ? (ulong) value_ : 0UL; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.LongValue;
          }
        }

        /// <summary>Field number for the "float_value" field.</summary>
        public const int FloatValueFieldNumber = 12;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float FloatValue {
          get { return valueCase_ == ValueOneofCase.FloatValue ? (float) value_ : 0F; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.FloatValue;
          }
        }

        /// <summary>Field number for the "double_value" field.</summary>
        public const int DoubleValueFieldNumber = 13;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double DoubleValue {
          get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.DoubleValue;
          }
        }

        /// <summary>Field number for the "boolean_value" field.</summary>
        public const int BooleanValueFieldNumber = 14;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool BooleanValue {
          get { return valueCase_ == ValueOneofCase.BooleanValue ? (bool) value_ : false; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.BooleanValue;
          }
        }

        /// <summary>Field number for the "string_value" field.</summary>
        public const int StringValueFieldNumber = 15;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StringValue {
          get { return valueCase_ == ValueOneofCase.StringValue ? (string) value_ : ""; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.StringValue;
          }
        }

        /// <summary>Field number for the "bytes_value" field.</summary>
        public const int BytesValueFieldNumber = 16;
        /// <summary>
        /// Bytes, File
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString BytesValue {
          get { return valueCase_ == ValueOneofCase.BytesValue ? (pb::ByteString) value_ : pb::ByteString.Empty; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.BytesValue;
          }
        }

        /// <summary>Field number for the "dataset_value" field.</summary>
        public const int DatasetValueFieldNumber = 17;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet DatasetValue {
          get { return valueCase_ == ValueOneofCase.DatasetValue ? (global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.DatasetValue;
          }
        }

        /// <summary>Field number for the "template_value" field.</summary>
        public const int TemplateValueFieldNumber = 18;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template TemplateValue {
          get { return valueCase_ == ValueOneofCase.TemplateValue ? (global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.TemplateValue;
          }
        }

        /// <summary>Field number for the "extension_value" field.</summary>
        public const int ExtensionValueFieldNumber = 19;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Types.MetricValueExtension ExtensionValue {
          get { return valueCase_ == ValueOneofCase.ExtensionValue ? (global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Types.MetricValueExtension) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ExtensionValue;
          }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase {
          None = 0,
          IntValue = 10,
          LongValue = 11,
          FloatValue = 12,
          DoubleValue = 13,
          BooleanValue = 14,
          StringValue = 15,
          BytesValue = 16,
          DatasetValue = 17,
          TemplateValue = 18,
          ExtensionValue = 19,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ValueOneofCase ValueCase {
          get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue() {
          valueCase_ = ValueOneofCase.None;
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Metric);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Metric other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Alias != other.Alias) return false;
          if (Timestamp != other.Timestamp) return false;
          if (Datatype != other.Datatype) return false;
          if (IsHistorical != other.IsHistorical) return false;
          if (IsTransient != other.IsTransient) return false;
          if (IsNull != other.IsNull) return false;
          if (!object.Equals(Metadata, other.Metadata)) return false;
          if (!object.Equals(Properties, other.Properties)) return false;
          if (IntValue != other.IntValue) return false;
          if (LongValue != other.LongValue) return false;
          if (FloatValue != other.FloatValue) return false;
          if (DoubleValue != other.DoubleValue) return false;
          if (BooleanValue != other.BooleanValue) return false;
          if (StringValue != other.StringValue) return false;
          if (BytesValue != other.BytesValue) return false;
          if (!object.Equals(DatasetValue, other.DatasetValue)) return false;
          if (!object.Equals(TemplateValue, other.TemplateValue)) return false;
          if (!object.Equals(ExtensionValue, other.ExtensionValue)) return false;
          if (ValueCase != other.ValueCase) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Alias != 0UL) hash ^= Alias.GetHashCode();
          if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
          if (Datatype != 0) hash ^= Datatype.GetHashCode();
          if (IsHistorical != false) hash ^= IsHistorical.GetHashCode();
          if (IsTransient != false) hash ^= IsTransient.GetHashCode();
          if (IsNull != false) hash ^= IsNull.GetHashCode();
          if (metadata_ != null) hash ^= Metadata.GetHashCode();
          if (properties_ != null) hash ^= Properties.GetHashCode();
          if (valueCase_ == ValueOneofCase.IntValue) hash ^= IntValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.LongValue) hash ^= LongValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.FloatValue) hash ^= FloatValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= DoubleValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.BooleanValue) hash ^= BooleanValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.BytesValue) hash ^= BytesValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.DatasetValue) hash ^= DatasetValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.TemplateValue) hash ^= TemplateValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.ExtensionValue) hash ^= ExtensionValue.GetHashCode();
          hash ^= (int) valueCase_;
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Alias != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(Alias);
          }
          if (Timestamp != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Timestamp);
          }
          if (Datatype != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Datatype);
          }
          if (IsHistorical != false) {
            output.WriteRawTag(40);
            output.WriteBool(IsHistorical);
          }
          if (IsTransient != false) {
            output.WriteRawTag(48);
            output.WriteBool(IsTransient);
          }
          if (IsNull != false) {
            output.WriteRawTag(56);
            output.WriteBool(IsNull);
          }
          if (metadata_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(Metadata);
          }
          if (properties_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(Properties);
          }
          if (valueCase_ == ValueOneofCase.IntValue) {
            output.WriteRawTag(80);
            output.WriteUInt32(IntValue);
          }
          if (valueCase_ == ValueOneofCase.LongValue) {
            output.WriteRawTag(88);
            output.WriteUInt64(LongValue);
          }
          if (valueCase_ == ValueOneofCase.FloatValue) {
            output.WriteRawTag(101);
            output.WriteFloat(FloatValue);
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            output.WriteRawTag(105);
            output.WriteDouble(DoubleValue);
          }
          if (valueCase_ == ValueOneofCase.BooleanValue) {
            output.WriteRawTag(112);
            output.WriteBool(BooleanValue);
          }
          if (valueCase_ == ValueOneofCase.StringValue) {
            output.WriteRawTag(122);
            output.WriteString(StringValue);
          }
          if (valueCase_ == ValueOneofCase.BytesValue) {
            output.WriteRawTag(130, 1);
            output.WriteBytes(BytesValue);
          }
          if (valueCase_ == ValueOneofCase.DatasetValue) {
            output.WriteRawTag(138, 1);
            output.WriteMessage(DatasetValue);
          }
          if (valueCase_ == ValueOneofCase.TemplateValue) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(TemplateValue);
          }
          if (valueCase_ == ValueOneofCase.ExtensionValue) {
            output.WriteRawTag(154, 1);
            output.WriteMessage(ExtensionValue);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Alias != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Alias);
          }
          if (Timestamp != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
          }
          if (Datatype != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datatype);
          }
          if (IsHistorical != false) {
            size += 1 + 1;
          }
          if (IsTransient != false) {
            size += 1 + 1;
          }
          if (IsNull != false) {
            size += 1 + 1;
          }
          if (metadata_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
          }
          if (properties_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
          }
          if (valueCase_ == ValueOneofCase.IntValue) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IntValue);
          }
          if (valueCase_ == ValueOneofCase.LongValue) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LongValue);
          }
          if (valueCase_ == ValueOneofCase.FloatValue) {
            size += 1 + 4;
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            size += 1 + 8;
          }
          if (valueCase_ == ValueOneofCase.BooleanValue) {
            size += 1 + 1;
          }
          if (valueCase_ == ValueOneofCase.StringValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
          }
          if (valueCase_ == ValueOneofCase.BytesValue) {
            size += 2 + pb::CodedOutputStream.ComputeBytesSize(BytesValue);
          }
          if (valueCase_ == ValueOneofCase.DatasetValue) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(DatasetValue);
          }
          if (valueCase_ == ValueOneofCase.TemplateValue) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(TemplateValue);
          }
          if (valueCase_ == ValueOneofCase.ExtensionValue) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExtensionValue);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Metric other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Alias != 0UL) {
            Alias = other.Alias;
          }
          if (other.Timestamp != 0UL) {
            Timestamp = other.Timestamp;
          }
          if (other.Datatype != 0) {
            Datatype = other.Datatype;
          }
          if (other.IsHistorical != false) {
            IsHistorical = other.IsHistorical;
          }
          if (other.IsTransient != false) {
            IsTransient = other.IsTransient;
          }
          if (other.IsNull != false) {
            IsNull = other.IsNull;
          }
          if (other.metadata_ != null) {
            if (metadata_ == null) {
              metadata_ = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.MetaData();
            }
            Metadata.MergeFrom(other.Metadata);
          }
          if (other.properties_ != null) {
            if (properties_ == null) {
              properties_ = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet();
            }
            Properties.MergeFrom(other.Properties);
          }
          switch (other.ValueCase) {
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.LongValue:
              LongValue = other.LongValue;
              break;
            case ValueOneofCase.FloatValue:
              FloatValue = other.FloatValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.BooleanValue:
              BooleanValue = other.BooleanValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.BytesValue:
              BytesValue = other.BytesValue;
              break;
            case ValueOneofCase.DatasetValue:
              DatasetValue = other.DatasetValue;
              break;
            case ValueOneofCase.TemplateValue:
              TemplateValue = other.TemplateValue;
              break;
            case ValueOneofCase.ExtensionValue:
              ExtensionValue = other.ExtensionValue;
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Alias = input.ReadUInt64();
                break;
              }
              case 24: {
                Timestamp = input.ReadUInt64();
                break;
              }
              case 32: {
                Datatype = input.ReadUInt32();
                break;
              }
              case 40: {
                IsHistorical = input.ReadBool();
                break;
              }
              case 48: {
                IsTransient = input.ReadBool();
                break;
              }
              case 56: {
                IsNull = input.ReadBool();
                break;
              }
              case 66: {
                if (metadata_ == null) {
                  metadata_ = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.MetaData();
                }
                input.ReadMessage(metadata_);
                break;
              }
              case 74: {
                if (properties_ == null) {
                  properties_ = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.PropertySet();
                }
                input.ReadMessage(properties_);
                break;
              }
              case 80: {
                IntValue = input.ReadUInt32();
                break;
              }
              case 88: {
                LongValue = input.ReadUInt64();
                break;
              }
              case 101: {
                FloatValue = input.ReadFloat();
                break;
              }
              case 105: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 112: {
                BooleanValue = input.ReadBool();
                break;
              }
              case 122: {
                StringValue = input.ReadString();
                break;
              }
              case 130: {
                BytesValue = input.ReadBytes();
                break;
              }
              case 138: {
                global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet subBuilder = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.DataSet();
                if (valueCase_ == ValueOneofCase.DatasetValue) {
                  subBuilder.MergeFrom(DatasetValue);
                }
                input.ReadMessage(subBuilder);
                DatasetValue = subBuilder;
                break;
              }
              case 146: {
                global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template subBuilder = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Template();
                if (valueCase_ == ValueOneofCase.TemplateValue) {
                  subBuilder.MergeFrom(TemplateValue);
                }
                input.ReadMessage(subBuilder);
                TemplateValue = subBuilder;
                break;
              }
              case 154: {
                global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Types.MetricValueExtension subBuilder = new global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Types.MetricValueExtension();
                if (valueCase_ == ValueOneofCase.ExtensionValue) {
                  subBuilder.MergeFrom(ExtensionValue);
                }
                input.ReadMessage(subBuilder);
                ExtensionValue = subBuilder;
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Metric message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class MetricValueExtension : pb::IMessage<MetricValueExtension> {
            private static readonly pb::MessageParser<MetricValueExtension> _parser = new pb::MessageParser<MetricValueExtension>(() => new MetricValueExtension());
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<MetricValueExtension> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Org.Eclipse.Tahu.Protobuf.Payload.Types.Metric.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MetricValueExtension() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MetricValueExtension(MetricValueExtension other) : this() {
              details_ = other.details_.Clone();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MetricValueExtension Clone() {
              return new MetricValueExtension(this);
            }

            /// <summary>Field number for the "details" field.</summary>
            public const int DetailsFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_details_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
            private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> details_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Details {
              get { return details_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as MetricValueExtension);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(MetricValueExtension other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!details_.Equals(other.details_)) return false;
              return true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= details_.GetHashCode();
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              details_.WriteTo(output, _repeated_details_codec);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += details_.CalculateSize(_repeated_details_codec);
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(MetricValueExtension other) {
              if (other == null) {
                return;
              }
              details_.Add(other.details_);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    details_.AddEntriesFrom(input, _repeated_details_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
